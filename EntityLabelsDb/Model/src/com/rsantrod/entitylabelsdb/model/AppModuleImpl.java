package com.rsantrod.entitylabelsdb.model;

import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.HashMap;
import java.util.Map;

import oracle.jbo.JboException;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;

import oracle.jdbc.OracleTypes;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Jul 08 23:08:34 CEST 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppModuleImpl extends ApplicationModuleImpl {
    /**
     * This is the default constructor (do not remove).
     */
    public AppModuleImpl() {
    }

    /**
     * Container's getter for DepartmentsView1.
     * @return DepartmentsView1
     */
    public ViewObjectImpl getDepartmentsView1() {
        return (ViewObjectImpl) findViewObject("DepartmentsView1");
    }
    
    public Map<String, String> getResourceBundle(String locale) {
        CallableStatement st = null;
        Map<String, String> bundle = new HashMap<String, String>();
        String plsql = "begin ? := resource_bundle_manager.getresourcebundle(?); end;";

        try {
            st = getDBTransaction().createCallableStatement(plsql, 0);
            st.registerOutParameter(1, OracleTypes.CURSOR);
            st.setString(2, locale);
            st.executeUpdate();

            ResultSet rs = (ResultSet) st.getObject(1);
            while (rs.next()) {
                bundle.put(rs.getString(1), rs.getString(2));
            }

        } catch (SQLException e) {
            throw new JboException(e);
        } finally {

            if (st != null) {
                try {
                    st.close();
                } catch (SQLException e) {
                }
            }

        }
        return bundle;
    }

}

